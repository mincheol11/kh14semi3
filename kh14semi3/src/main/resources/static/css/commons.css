@charset "UTF-8";
/* 앞으로 자주 사용할 디자인 코드들을 보관해두는 파일 */

/* 모든 태그에 폭 설정 기준을 "테두리"로 지정 */
*{
    box-sizing: border-box; 
    font-family: "Noto Sans KR", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
    word-break: break-all; /* 글자에 대한 줄바꿈 기준 설정 */
}

/* 영역을 시각적으로 표시하기 위한 테스트 코드 */
div{
    box-shadow: 0 0 0px 0 gray;
    /* 그림자는 폭에 영향을 주지 않는다 */
}

/* 
   화면을 만들기 위한 컨테이너(container)와 행(row)에 대한 디자인
   - 컨테이너는 가운데 정렬되도록 구현
   - 폭은 다른 클래스로 지정하도록 구현
*/
html, body {
	margin: 0;
	padding: 0;
	height: 100%;
	width: 100%;
}
.kh-container{
	display: flex;
	flex-direction: column;
	height: 100vh; /* 뷰포트 높이의 100% */
}
.kh-header{
	height: 150px;
	width: 100%;
	background-image: url("/images/background_header2_opacity.png");
	/* z-index:1; */
}
.kh-body{
	flex:1;
	/* height: 100%; */
	background-color: #F1F5F9;
}
.kh-footer{
	font-size: 12px;
	height: 150px; /* 푸터의 높이 설정 */
	width: 100%;
	background-image: url("/images/background_footer1_opacity.png");
	z-index:1;
}

.container{
    /* 좌우 여백을 자동으로 설정하여 가운데 정렬 */
    margin-left: auto;
    margin-right: auto;
}
.row{
    margin-top: 10px;
    margin-bottom: 10px;
}

/* 
   내용물 정렬과 관련된 클래스
   주로 row에 추가하여 내부 요소들을 정렬할 때 사용
   (TMI) 
   - left, right는 차별적인 단어라서 사용을 자제
   - left 대신 start를 사용, right 대신 end를 사용
   - !important를 붙여서 최우선 적용되도록 구현
*/
.left{
    text-align: start !important;
}
.center{
    text-align: center !important;
}
.right{
    text-align: end !important;
}

/* 
    폭을 제어하는 클래스
    - 자주 사용하는 폭을 클래스로 미리 정의해서 사용하도록 구현
    - 단위는 50px로 하고 최소 200px부터 1200px 사이로 구현
    - w-??? 과 같은 클래스로 정의
    - 비율로 설정할 수도 있도록 구현
*/

.w-5{width: 5% !important;}
.w-10{width: 10% !important;}
.w-20{width: 20% !important;}
.w-25{width: 25% !important;}
.w-30{width: 30% !important;}
.w-33{width: 33.3333% !important;}
.w-40{width: 40% !important;}
.w-50{width: 50% !important;}
.w-60{width: 60% !important;}
.w-66{width: 66.6666% !important;}
.w-75{width: 75% !important;}
.w-80{width: 80% !important;}

.w-100{width: 100% !important;}
.w-150{width: 150px !important;}
.w-200{width: 200px !important;}
.w-250{width: 250px !important;}
.w-300{width: 300px !important;}
.w-350{width: 350px !important;}
.w-400{width: 400px !important;}
.w-450{width: 450px !important;}
.w-500{width: 500px !important;}
.w-550{width: 550px !important;}
.w-600{width: 600px !important;}
.w-650{width: 650px !important;}
.w-700{width: 700px !important;}
.w-750{width: 750px !important;}
.w-800{width: 800px !important;}
.w-850{width: 850px !important;}
.w-900{width: 900px !important;}
.w-950{width: 950px !important;}
.w-1000{width: 1000px !important;}
.w-1050{width: 1050px !important;}
.w-1100{width: 1100px !important;}
.w-1150{width: 1150px !important;}
.w-1200{width: 1200px !important;}  
.w-1400{width: 1400px !important;}

/* 
    여백 스타일 (margin, padding)
    - 여백의 종류와 방향에 따라 단위별로 디자인을 미리 구현
    - 방향의 종류 : top, bottom, left(start), right(end), x(좌우양쪽), y(위아래양쪽)
*/

.mt-0{margin-top: 0 !important;}
.mt-10{margin-top: 10px !important;}
.mt-20{margin-top: 20px !important;}
.mt-30{margin-top: 30px !important;}
.mt-40{margin-top: 40px !important;}
.mt-50{margin-top: 50px !important;}
.mt-100{margin-top: 100px !important;}
.mt-150{margin-top: 150px !important;}
.mt-200{margin-top: 200px !important;}

.mb-0{margin-bottom: 0 !important;}
.mb-10{margin-bottom: 10px !important;}
.mb-20{margin-bottom: 20px !important;}
.mb-30{margin-bottom: 30px !important;}
.mb-40{margin-bottom: 40px !important;}
.mb-50{margin-bottom: 50px !important;}

.ms-0{margin-left: 0 !important;}
.ms-10{margin-left: 10px !important;}
.ms-20{margin-left: 20px !important;}
.ms-30{margin-left: 30px !important;}
.ms-40{margin-left: 40px !important;}
.ms-50{margin-left: 50px !important;}

.me-0{margin-right: 0 !important;}
.me-10{margin-right: 10px !important;}
.me-20{margin-right: 20px !important;}
.me-30{margin-right: 30px !important;}
.me-40{margin-right: 40px !important;}
.me-50{margin-right: 50px !important;}

.mx-0{margin-left: 0 !important; margin-right: 0 !important;}
.mx-10{margin-left: 10px !important; margin-right: 10px !important;}
.mx-20{margin-left: 20px !important; margin-right: 10px !important;}
.mx-30{margin-left: 30px !important; margin-right: 30px !important;}
.mx-40{margin-left: 40px !important; margin-right: 40px !important;}
.mx-50{margin-left: 50px !important; margin-right: 50px !important;}

.my-0{margin-top: 0 !important; margin-bottom: 0 !important;}
.my-10{margin-top: 10px !important; margin-bottom: 10px !important;}
.my-20{margin-top: 20px !important; margin-bottom: 20px !important;}
.my-30{margin-top: 30px !important; margin-bottom: 30px !important;}
.my-40{margin-top: 40px !important; margin-bottom: 40px !important;}
.my-50{margin-top: 50px !important; margin-bottom: 50px !important;}

.pt-0{padding-top: 0 !important;}
.pt-10{padding-top: 10px !important;}
.pt-20{padding-top: 20px !important;}
.pt-30{padding-top: 30px !important;}
.pt-40{padding-top: 40px !important;}
.pt-50{padding-top: 50px !important;}

.pb-0{padding-bottom: 0 !important;}
.pb-10{padding-bottom: 10px !important;}
.pb-20{padding-bottom: 20px !important;}
.pb-30{padding-bottom: 30px !important;}
.pb-40{padding-bottom: 40px !important;}
.pb-50{padding-bottom: 50px !important;}

.ps-0{padding-left: 0 !important;}
.ps-10{padding-left: 10px !important;}
.ps-20{padding-left: 20px !important;}
.ps-30{padding-left: 30px !important;}
.ps-40{padding-left: 40px !important;}
.ps-50{padding-left: 50px !important;}

.pe-0{padding-right: 0 !important;}
.pe-10{padding-right: 10px !important;}
.pe-20{padding-right: 20px !important;}
.pe-30{padding-right: 30px !important;}
.pe-40{padding-right: 40px !important;}
.pe-50{padding-right: 50px !important;}

.px-0{padding-left: 0 !important; padding-right: 0 !important;}
.px-10{padding-left: 10px !important; padding-right: 10px !important;}
.px-20{padding-left: 20px !important; padding-right: 10px !important;}
.px-30{padding-left: 30px !important; padding-right: 30px !important;}
.px-40{padding-left: 40px !important; padding-right: 40px !important;}
.px-50{padding-left: 50px !important; padding-right: 50px !important;}

.py-0{padding-top: 0 !important; padding-bottom: 0 !important;}
.py-10{padding-top: 10px !important; padding-bottom: 10px !important;}
.py-20{padding-top: 20px !important; padding-bottom: 20px !important;}
.py-30{padding-top: 30px !important; padding-bottom: 30px !important;}
.py-40{padding-top: 40px !important; padding-bottom: 40px !important;}
.py-50{padding-top: 50px !important; padding-bottom: 50px !important;}

.p-0{padding-left: 0 !important; padding-right: 0 !important; padding-top: 0 !important; padding-bottom: 0 !important;}
.p-10{padding-left: 10px !important; padding-right: 10px !important; padding-top: 10px !important; padding-bottom: 10px !important;}
.p-20{padding-left: 20px !important; padding-right: 10px !important; padding-top: 20px !important; padding-bottom: 20px !important;}
.p-30{padding-left: 30px !important; padding-right: 30px !important; padding-top: 30px !important; padding-bottom: 30px !important;}
.p-40{padding-left: 40px !important; padding-right: 40px !important; padding-top: 40px !important; padding-bottom: 40px !important;}
.p-50{padding-left: 50px !important; padding-right: 50px !important; padding-top: 50px !important; padding-bottom: 50px !important;}

/* 
   입력창 스타일
   .field를 기본 입력창으로 정의
*/
.field{
    font-size: 16px;
    padding: 0.5em 0.5em;
    outline: none; /* 브라우저에서 제공하는 자동강조효과 제거 */
    border: 1px solid #636e72;
    border-radius: 0.1em;
    line-height: 1.2;
}
.field:not(textarea), .btn { 
    /* class=field 중에서 textarea 빼고 적용 */
    height: 2.5em !important;
    vertical-align: middle;
}
.field:focus{ 
    /* :hover 마우스를 올렸을 때만 적용 */
    /* :focus 선택하여 커서가 위치할 때만 적용 */
    border-color: #2d3436;
}

/* 
   (주의) textarea는 크기 변경이 수직으로만 가능하도록 구현 
*/
textarea.field{
    resize: vertical;
    min-height: 120px; /* height로 하면 높이 변경이 안됨 */
}

/* 
   입력창 확장 클래스 (.field-underline)
*/
.field.field-underline{
    /* 확장클래스와 메인클래스가 같이 있어야 확장클래스에 적용된다 */
    border-top: none;
    border-left: none;
    border-right: none;
    padding-left: 0;
    padding-right: 0;
    border-radius: 0;
}

/* 
    버튼 스타일
    - <button>, <input>, <a> 등이 버튼이 될 수 있다
    - 모든 종류가 동일한 모양을 가져야 한다
    - 버튼마다 역할이 있으며, 그에 걸맞는 색상을 가져야 한다
        1. 긍정버튼 : 현재 화면의 목적을 달성할 수 있는 버튼
        2. 부정버튼 : 작업을 중지하거나 위험한 작업에 대한 버튼
        3. 중립버튼 : 제 3의 작업을 발생시키는 버튼
    - 기본 스타일 : .btn
*/
.btn{
    text-decoration: none; /* 밑줄 제거 */
    display: inline-block; 
    /* 한줄에 여러개 배치 + 블럭이 있어야 폭 조절 가능 */
    font-size: 16px; /* 입력창과 동일하게 */
    padding: 0.5em 0.5em; /* 입력창과 동일하게 */
    color: #2d3436;
    background-color: #dfe6e9;
    border: 1px solid #2d3436;
    border-radius: 0.1em;
    cursor: pointer; /* 커서모양 변경 */
    text-align: center;
    line-height: 1.2;
}

.btn.btn-underline{
    background: none;
    border-top: none;
    border-left: none;
    border-right: none;
    border-radius: 0;
}

/* 긍정 버튼 디자인 */
.btn.btn-positive{
    border-color: #00b894;
    background-color: #00b894;
    color: white;
}
/* 부정 버튼 디자인 */
.btn.btn-negative{
    border-color: #d63031;
    background-color: #d63031;
    color: white;
}
/* 중립 버튼 디자인 */
.btn.btn-neutral{
    border-color: #636e72;
    background-color: #636e72;
    color: white;
}

/* 이미지가 있는 입력필드 */
.field.field-image{
    /* background-image: url("images/id.png"); */
    background-size: 2em;
    background-repeat: no-repeat;
    background-position-x: 0.05em;
    background-position-y: center;
    padding-left: 2.5em;
}

.block{
    display: block;
}

/* 
    테이블 디자인
    - 테이블은 여러 태그가 조합된 형태
    - 클래스를 하나만 붙이고 탐색하여 원하는 대상을 찾는다
    - 자식선택자(부등호), 후손선택자(띄어쓰기)를 사용
    - 후손선택자는 안에 포함된 모든 대상 중에서 탐색하여 선택
    - 자식선택자는 바로 아래 대상 중에서 탐색하여 선택
*/

.table{
    width: 100%;
    border-collapse: collapse;
    font-size: 16px;
}
.table > thead > tr > th,
.table > thead > tr > td,
.table > tbody > tr > th,
.table > tbody > tr > td,
.table > tfoot > tr > th,
.table > tfoot > tr > td
{
    text-align: center;
    padding: 0.25em;
}

/* 확장스타일 - 테두리가 있는 테이블 */
.table.table-border,
.table.table-border > thead > tr > th,
.table.table-border > thead > tr > td,
.table.table-border > tbody > tr > th,
.table.table-border > tbody > tr > td,
.table.table-border > tfoot > tr > th,
.table.table-border > tfoot > tr > td
{
    border: 1px solid black;
}

/* 확장스타일 - 마우스에 반응하는 테이블 */
.table.table-hover > tbody > tr:hover
{
    background-color: #777777 !important;
    background-color: #7eb6c5 !important;
}

/* 확장스타일 - 줄무늬 테이블 */
.table.table-stripe > tbody > tr:nth-child(2n-1)
{
    background-color: #dddddd;
}

/* 확장스타일 - 가로선만 있는 테이블 */
.table.table-horizontal {
    border-top: 3px solid black;
    border-bottom: 3px solid black;
}
.table.table-horizontal > thead {
    border-bottom: 1px solid black;
}
.table.table-horizontal > tfoot {
    border-top: 1px solid black;
}

/* 
    링크 디자인
    - 기본 색상 제거
    - 밑줄 제거
    - 호버(hover) 디자인
*/
.link{
    color: #555555;
    text-decoration: none;
    display: inline-block;
}
.link:hover{
    filter: brightness(150%);
}
.link.link-animation {
    /* transition : 항목 시간 타이밍 */
    transition: transform 0.1s ease-out;
}
.link.link-animation:hover {
    transform: scale(1.1);
    /* transform: rotate(90deg); */
}

/* 페이지 네비게이터 디자인 */
.pagination{
    text-align: center;
}
.pagination > a {
    color: gray;
    text-decoration: none;
    display: inline-block;
    padding: 0.5em;
    min-width: 2.5em;
    font-size: inherit; /* 외부의 글자 크기 설정을 따른다 */
}
.pagination > a:hover, /* 마우스가 올라간 경우 */
.pagination > a.on /* 활성화 된 경우 */
{
    /* box-shadow : x위치 y위치 번짐 퍼짐 색상 */
    box-shadow: 0px 0px 1px 0px gray;    
    color: coral;        
}

/* 
   float 관련 스타일
   가상선택자(virtual selector)  
   - 존재하지 않는 영역을 선택하여 디자인
   - ::before는 태그의 가장 첫 지점을 의미
   - ::after는 태그의 가장 마지막 지점을 의미
*/
.float-box::after{
content: "";
display: block;
clear: both;
}
.float-box > .float-left{
float: left;
}
.float-box > .float-right{
float: right;
}

.title{
    font-size: 1.25em;
}

/* 색상 관련 스타일 */
.blue{color:blue !important;}
.red{color:red !important;}
.black{color:black !important;}
.gray{color:gray !important;}
.white{color:white !important;}
.green{color:green !important;}
.orange{color:orange !important;}
.purple{color:purple !important;}
.yellow{color:yellow !important;}

/* flexible layout 스타일 */
.flex-box{
    display: flex;
    flex-wrap: nowrap;
}
.flex-box.column-2 > *{width: 50% !important;}
.flex-box.column-3 > *{width: 33.3333% !important;}
.flex-box.column-4 > *{width: 25% !important;}

.flex-core{
    display: flex;
    justify-content: center;
    align-items: center;
}

/* 
    말줄임표 스타일 
    - (조건) 글자가 소속된 영역의 폭이 확정되어 있을 것! (폭이 늘어나면 안됨)
*/
.text-ellipsis{
    white-space: nowrap; /* word-break가 작동안하게 하는 명령, 엔터 못치게 함 */
    overflow: hidden; /* 글자가 폭을 넘어가면 뒷내용을 숨기게 하는 명령 */
    text-overflow: ellipsis; /* 말줄임표 명령*/
}

.video-title{
    color: black;
    font-size: 1.25em;
}
.video-uploader{
    color: #636e72;
    font-size: 0.85em;
}
.video-info{
    color: #636e72;
    font-size: 0.85em;
}

/* 이미지 스타일링 */
.image.image-round {
    border-radius: 5px;
}
.image.image-circle {
    border-radius: 50%;
}
.image.image-shadow {
    /* box-shadow : x y blur spread color */
    box-shadow: 2px 2px 0 0 black;
}
.image.image-lift {
    box-shadow: 0 0 5px 0 black;
}
.image.image-blur {
    filter: blur(2px);
}
.image.image-grayscale {
    filter: grayscale(100%);
}
.image.image-fade {
    opacity: 0.6; /* 불투명도 0 ~ 1 */
    transition: opacity 0.1s ease-out;
}
.image.image-blur.image-hover:hover,
.image.image-grayscale.image-hover:hover
{
    filter: none;
}
.image.image-fade.image-hover:hover {
    opacity: 1;
}
.image.image-scale {
    overflow: hidden;
}
.image.image-scale > img {
    transition: transform 0.1s linear;
    transform: scale(1);
    width: 100%;
    height: 100%;
}
.image.image-scale.image-hover > img:hover {
    transform: scale(1.2);
}

/* 화면 가림 장치 */
.screen-wrapper{
    background-color: #00000080;
    /* background-color: black;
    opacity: 0.5; */ /*전체 투명도 조절이므로 가림막 위의 보여주어야 하는 내용물도 조절되기 때문에 적절치 않다 */
    position: fixed;
    top: 0px;
    left: 0px;
    right: 0px;
    bottom: 0px;
    z-index: 99999;
}

/* 
    체크박스 스타일 

    +를 이용하여 "바로 뒤"에 있는 태그를 선택하거나 (1개 선택)
    ~를 이용하여 "뒤"에 있는 태그를 선택할 수 있다 (여러개 선택, 위치무관)
*/
.ck1 + span{
    color: red;
}
.ck1:checked + span{
    color: blue;
}

/* 
   메뉴와 같은 계층형(tree) 구조는 ul 또는 ol로 구현한다 (리스트 태그)
   1. 태그에 존재하는 기본 여백과 모양을 제거(리셋)
   2. 1차 메뉴의 배치를 가로로 변경
   3. 메뉴별 크기를 지정하고 a태그를 영역에 꽉 채우도록 설정
   4. (중요) 1차메뉴항목을 기준으로 2차메뉴항목 위치가 정해지도록 구현(2차 이상도 마찬가지, 1>2>3>4)
   5. 하위메뉴(2차이상)을 숨김 처리하고 항목에 마우스가 올라가면 하위메뉴를 표시
   6. 1차 메뉴 중에서 오른쪽에 배치되는 메뉴를 처리하도록 구현
       - 오른쪽 메뉴 항목 중 가장 왼쪽 항목에 margin-left를 auto로 부여
   7. 3차메뉴 이상부터는 좌/우로 펼쳐지도록 구현
   8. 배경 색상 및 hover 상태 색상 설정
   9. 홈페이지에 적용
*/

/* 1 */
/* .menu, 1차 메뉴
.menu ul 2차 메뉴 이상
{
    list-style: none;
    margin: 0;
    padding: 0;
    background-color: #80808020;
}
.menu a 메뉴 안의 모든 a태그
{
    color: inherit;
    text-decoration: none;
}

2
.menu{
    display: flex;
}

3
.menu li{ 메뉴 안의 모든 항목
    width: 120px;
}
.menu a{ 메뉴 안의 모든 a태그
    display: block;
    width: 100%;
    padding: 0.5em;
    text-align: center;
}

4
.menu li { 모든 메뉴의 항목
    position: relative; 기준점 만들기
}
.menu ul { 2차 이상 메뉴
    position: absolute;
    top: 100%;
    left: 0;

}

5
.menu ul{
    display: none;
}
.menu li:hover > ul{ 모든 항목에 마우스가 올라가면 바로 아래 메뉴
    display: block;
}

6
.right-menu{
    margin-left: auto;
}

7
.menu > li > ul ul{ 3차 이상의 모든 메뉴
    top: 0;
    left: 100%;
}
.menu > li.right-menu > ul ul,
.menu > li.right-menu ~li > ul ul{ 오른쪽에 배치되는 1차 메뉴들에게서 열리는 3차 메뉴들
    top: 0;
    left: -100%;
}

8
.menu a:hover{
    color: red;
}
.menu ul{
    background-color: #87cfeb20;
} */

/*
    입력창 피드백 디자인
    - 입력창이 .sucess가 되면 .success-feedback을 표시
    - 입력창이 .fail이 되면 .fail-feedback을 표시
*/
.success-feedback,
.fail-feedback,
.fail2-feedback,
.fail3-feedback 
{
    display: none;
}
.success ~ .success-feedback, /* .success 뒤에 있는 피드백 */
.fail ~ .fail-feedback, /* .fail 뒤에 있는 피드백 */
.fail2 ~ .fail2-feedback, /* .fail2 뒤에 있는 피드백 */
.fail3 ~ .fail3-feedback /* .fail3 뒤에 있는 피드백 */
{
    display: block;
}

.success-feedback {color: green;}
.fail-feedback,
.fail2-feedback,
.fail3-feedback 
{color: red;}
.success {border-color: green;}
.fail, .fail2, .fail3 {border-color: red;}

/* 프로그레스바(progress bar) 디자인 */
.progressbar{

}
.progressbar > .gauge {
    background: rgb(131,58,180);
    background: linear-gradient(90deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);
    width: 0%;
    height: 10px;
    transition: width 0.1s linear;
}

